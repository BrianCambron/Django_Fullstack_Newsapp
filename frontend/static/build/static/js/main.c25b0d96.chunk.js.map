{"version":3,"sources":["components/BlogList.js","components/BlogForm.js","components/StatusList.js","components/RegisterForm.js","components/LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["BlogItem","props","onClick","pickBlog","blog","id","className","title","author","truncate","body","BlogList","blogs","filter","isTopStory","map","key","BlogForm","state","created_at","Date","category","status","handleChange","bind","event","this","setState","target","name","value","onSubmit","addBlog","htmlFor","type","onChange","rows","Component","StatusListItem","isEditing","handleInput","toggleEdit","handleSave","updatedBlog","editBlog","Fragment","cols","deleteBlog","StatusList","handleClick","dataset","selection","data-filter","RegisterForm","username","email","password1","password2","registerUser","LoginForm","password","logIn","App","pickedBlog","display","isLoggedIn","Cookies","get","logOut","fetch","then","response","json","data","catch","error","console","log","preventDefault","csrftoken","method","headers","JSON","stringify","index","findIndex","splice","blogPost","find","str","length","substring","set","detail","remove","html","loggedInHtml","FullBlog","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c25b0d96.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction BlogItem(props){\n    return(\n      <div onClick={() => props.pickBlog(props.blog.id)} className=\"col\">\n        <div className=\"list-group mb-2\">\n          <div className=\"list-group-item list-group-item-action\">\n            <div className=\"d-flex w-100 justify-content-between\">\n              <h5 className=\"mb-3 left-side-blogtitle\">{props.blog.title}</h5>\n            </div>\n              <p className='author'>{props.blog.author}</p>\n              <p className=\"mb-1 left-side-blogbody\">{props.truncate(props.blog.body)}</p>\n          </div>\n        </div>\n      </div>\n    );\n}\n\n\n\nfunction BlogList(props){\n  const blogs = props.blogs.filter(blog => blog.isTopStory === true).map(blog => <BlogItem key={blog.id} blog={blog} truncate={props.truncate} pickBlog={props.pickBlog}/>);\n\n  return(\n    <div className=\"mt-3\">\n      {blogs}\n    </div>\n  )\n}\nexport default BlogList;\n","import React, { Component } from 'react';\nimport './BlogForm.css'\n\n\nclass BlogForm extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      title:'',\n      body:'',\n      author: '',\n      isTopStory: false,\n      created_at: new Date(),\n      category:'TVL',\n      status:'DFT',\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(event){\n    this.setState({[event.target.name]: event.target.value});\n  }\n  render(){\n    return(\n      <form className=\"col-12 col-md-6 mb-5\" onSubmit={(event) => {this.props.addBlog(event, this.state); this.setState({title:'', body:'', author:''})}}>\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" className =\"form-control\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.handleChange}/>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"body\">Body</label>\n          <textarea className=\"form-control\" id=\"body\" name=\"body\" rows=\"8\" value={this.state.body} onChange={this.handleChange}/>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"author\">Author</label>\n          <input type=\"text\" className =\"form-control\" id=\"author\" name=\"author\"value={this.state.author} onChange={this.handleChange}/>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" className=\"form-control\" name=\"category\" value={this.state.category} onChange={this.handleChange}>\n            <option>TVL</option>\n            <option>SPRT</option>\n            <option>ENT</option>\n            <option>FD</option>\n          </select>\n        </div>\n        <div className=\"form-bottom\">\n          <label htmlFor=\"status\">Post Status</label>\n          <select id=\"status\" className=\"form-control\" name=\"status\" value={this.state.status} onChange={this.handleChange}>\n            <option>DFT</option>\n            <option>SMTD</option>\n            <option>PBSHD</option>\n          </select>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">Add Post</button>\n      </form>\n    )\n  }\n}\n\n\n\n\n\nexport default BlogForm;\n","import React, { Component } from 'react';\n\nclass StatusListItem extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      title:'',\n      body:'',\n      category:'TVL',\n      created_at: new Date(),\n      status:'DFT',\n      isEditing: false,\n    }\n    this.handleInput = this.handleInput.bind(this)\n    this.toggleEdit = this.toggleEdit.bind(this)\n    this.handleSave = this.handleSave.bind(this)\n  }\n  handleInput(event){\n    this.setState({[event.target.name]: event.target.value});\n  }\n  toggleEdit(){\n    this.setState({isEditing: !this.state.isEditing});\n  }\n  handleSave(props){\n  const updatedBlog = {\n    title: this.state.title,\n    body: this.state.body,\n    category: this.state.category,\n    created_at: this.state.created_at,\n    status: this.state.status,\n  };\n    this.props.editBlog(updatedBlog, this.props.blogs.id);\n    this.toggleEdit();\n  }\n  render(){\n    return(\n      <li className=\"list-group-item list-group-item-action col\"key={this.props.blogs.id}>\n      {this.state.isEditing?\n        <div className=\"form-group\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" className =\"form-control\" id=\"title\" name=\"title\" value={this.state.title} onChange={this.handleInput}/>\n        </div>\n        :<h3>{this.props.blogs.title}</h3>}\n      <p>{this.props.blogs.author}</p>\n      {\n        this.state.isEditing\n        ? <React.Fragment>\n        <textarea rows=\"20\" cols=\"100\" name=\"body\" value={this.state.body} onChange={this.handleInput} />\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" className=\"form-control\" name=\"category\" value={this.state.category} onChange={this.handleInput}>\n            <option>TVL</option>\n            <option>SPRT</option>\n            <option>ENT</option>\n            <option>FD</option>\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"status\">Post Status</label>\n          <select id=\"status\" className=\"form-control\" name=\"status\" value={this.state.status} onChange={this.handleInput}>\n            <option>DFT</option>\n            <option>SMTD</option>\n            <option>PBSHD</option>\n          </select>\n        </div>\n        </React.Fragment>\n        : <p>{this.props.blogs.body}</p>\n      }\n      {\n        this.state.isEditing\n        ? <button className=\"btn btn-link\" onClick={this.handleSave} type='button'>Save</button>\n        : <button className=\"btn btn-link\" onClick={() => this.toggleEdit()}>Edit</button>\n      }\n      <button className=\"btn btn-danger\" onClick={() => this.props.deleteBlog(this.props.blogs.id)}>&#x2718;</button>\n      </li>\n    )\n  }\n}\n\n\n\nclass StatusList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      status: null,\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(event) {\n    if(event.target.dataset.filter === 'all') {\n      this.setState({status: null});\n    } else {\n      this.setState({status: event.target.dataset.filter});\n    }\n  }\n\n  render(){\n    let selection = this.props.blogs;\n\n    if(this.state.status) {\n      selection = this.props.blogs.filter(blog => blog.status === this.state.status);\n    }\n    const blogs = selection\n    .map(blog => <StatusListItem blogs={blog} key={blog.id} deleteBlog={this.props.deleteBlog} editBlog={this.props.editBlog}/>)\n    return(\n      <div>\n        <button className=\"btn btn-link\" type='button' onClick={this.handleClick} data-filter=\"all\">All Status's</button>\n        <button className=\"btn btn-link\" type='button' onClick={this.handleClick} data-filter=\"DFT\">Draft</button>\n        <button className=\"btn btn-link\" type='button' onClick={this.handleClick} data-filter=\"PBSHD\">Published</button>\n        <button className=\"btn btn-link\" type='button' onClick={this.handleClick} data-filter=\"SMTD\">Submitted</button>\n        {blogs}\n      </div>\n    )\n  }\n}\nexport default StatusList;\n","import React, { Component } from 'react';\n\nclass RegisterForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1:'',\n      password2:'',\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(event){\n    this.setState({[event.target.name]: event.target.value});\n  }\n  render(){\n    return(\n      <form className=\"col-12 col-md-6\" onSubmit={(event) => this.props.registerUser(event, this.state)}>\n        <h5 className=\"Register\">Create Account</h5>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input type='text' className=\"form-control\" id=\"username\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email Address</label>\n          <input type='text' className=\"form-control\" id=\"email\" name=\"email\" value={this.state.email} onChange={this.handleChange}/>\n          <small className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password1\">Password</label>\n          <input type='password' className=\"form-control\" id=\"password1\" name=\"password1\" value={this.state.password1} onChange={this.handleChange}/>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password2\">Confirm Password</label>\n          <input type='password' className=\"form-control\" id=\"password2\" name=\"password2\" value={this.state.password2} onChange={this.handleChange}/>\n        </div>\n        <div className=\"create-Account-Btn\">\n          <button className=\"btn btn-primary\">Register</button>\n        </div>\n      </form>\n    )\n  }\n}\nexport default RegisterForm;\n","import React, { Component } from 'react';\n\nclass LoginForm extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      username:'',\n      // email: '',\n      password:'',\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event){\n    this.setState({[event.target.name]: event.target.value});\n  }\n  render(){\n    return(\n      <React.Fragment>\n      <form className=\"col-12 col-md-6\" onSubmit={(event) => this.props.logIn(event, this.state)}>\n        <h5 className=\"Register\">Log in</h5>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">Username</label>\n          <input type='text' className=\"form-control\" id=\"username\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input type='password' className=\"form-control\" id=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n        </div>\n        <div className=\"create-Account-Btn\">\n          <button className=\"btn btn-primary\">Log in</button>\n        </div>\n      </form>\n      </React.Fragment>\n    )\n  }\n}\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport BlogList from './components/BlogList';\nimport BlogForm from './components/BlogForm';\nimport StatusList from './components/StatusList';\nimport RegisterForm from './components/RegisterForm';\nimport LoginForm from './components/LoginForm'\nimport Cookies from 'js-cookie';\nimport './App.css';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      blogs: [],\n      selection: null,\n      pickedBlog: {},\n      display: 'home',\n      isLoggedIn: Cookies.get('Authorization')? true: false,\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.truncate = this.truncate.bind(this)\n    this.pickBlog = this.pickBlog.bind(this)\n    this.addBlog = this.addBlog.bind(this)\n    this.deleteBlog = this.deleteBlog.bind(this)\n    this.editBlog = this.editBlog.bind(this)\n    this.registerUser = this.registerUser.bind(this)\n    this.logIn = this.logIn.bind(this)\n    this.logOut = this.logOut.bind(this)\n  }\n\n  componentDidMount(){\n    fetch('api/v1/blogs')\n    .then(response => response.json())\n    .then(data => this.setState({blogs: data}))\n    .catch(error => console.log('Error:', error));\n  }\n  addBlog(event, data){\n    event.preventDefault();\n    const csrftoken = Cookies.get('csrftoken');\n    fetch('api/v1/blogs/', {\n      method: 'POST',\n      headers: {\n        'X-CSRFToken': csrftoken,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n    })\n  .then(response => response.json())\n  .then(data => {\n    const blogs = [...this.state.blogs, data];\n    this.setState({blogs});\n  })\n  }\n  deleteBlog(id){\n  const csrftoken = Cookies.get('csrftoken');\n  fetch(`api/v1/blogs/${id}/`, {\n    method: 'DELETE',\n    headers:{\n      'X-CSRFToken': csrftoken,\n      'Content-Type': 'application/json'\n    },\n  })\n  .then(response => response)\n  .then(data => {\n    const blogs = [...this.state.blogs]\n    console.log('blogs', blogs)\n    const index = blogs.findIndex(blog => blog.id === id)\n    blogs.splice(index,1);\n    this.setState({blogs})\n  })\n  .catch(error => console.log(\"Error:\", error));\n  }\n  editBlog(data, id){\n    const csrftoken = Cookies.get('csrftoken');\n    fetch(`api/v1/blogs/${id}/`,{\n      method:'PUT',\n      headers: {\n      'X-CSRFToken': csrftoken,\n      'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data),\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data);\n      const blogs = [...this.state.blogs];\n      const index = blogs.findIndex(blog => blog.id === id);\n      blogs[index] = data;\n      this.setState({blogs})\n    })\n    .catch(error => console.log('Error:', error));\n  }\n\n  handleClick(event) {\n    if(event.target.dataset.filter === 'all') {\n      this.setState({selection: null});\n    } else {\n      this.setState({selection: event.target.dataset.filter});\n      }\n  }\n\n  pickBlog(id){\n    const blogPost = this.state.blogs.find(blog => blog.id === id);\n    // console.log(id);\n    this.setState({pickedBlog: blogPost, display:'pickedBlog'});\n    console.log(this.state.pickedBlog);\n  }\n\n  truncate(str) {\n    return str.length > 10 ? str.substring(0, 30) + \"...\" : str;\n  }\n\n  registerUser(event, data){\n  event.preventDefault();\n  const csrftoken = Cookies.get('csrftoken');\n  fetch('/api/v1/rest-auth/registration/', {\n    method:'POST',\n    headers: {\n      'X-CSRFToken': csrftoken,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n    .then(response => response.json())\n    .then(data => {if(data.key){\n        Cookies.set('Authorization', `Token ${data.key}`);\n        this.setState({isLoggedIn:true, display:'home'})\n      }})\n    .catch(error => console.log('Error:', error));\n  }\n\n  logIn(event, data){\n  event.preventDefault();\n  const csrftoken = Cookies.get('csrftoken');\n  fetch('/api/v1/rest-auth/login/', {\n    method:'POST',\n    headers:{\n      'X-CSRFToken': csrftoken,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  })\n    .then(response => response.json())\n    .then(data => {if(data.key){\n        Cookies.set('Authorization', `Token ${data.key}`);\n        this.setState({isLoggedIn:true, display:'home'})\n      }})\n    .catch(error => console.log('Error:', error));\n  }\n  logOut(){\n  const csrftoken = Cookies.get('csrftoken');\n  fetch('/api/v1/rest-auth/logout/', {\n    method: 'POST',\n    headers: {\n      'X-CSRFToken': csrftoken,\n      'Content-Type': 'application/json',\n    }\n  })\n    .then(response => response.json())\n    .then(data => {if(data.detail === 'Successfully logged out.'){\n          Cookies.remove('Authorization');\n          this.setState({isLoggedIn:false, display:'home'})\n        }})\n    .catch(error => console.log('Error:', error));\n  }\n\n  // <BlogForm addBlog={this.addBlog}/>\n  // <StatusList blogs={this.state.blogs} deleteBlog={this.deleteBlog} editBlog={this.editBlog}/>\n\n  render(){\n    let selection = this.state.blogs;\n    let display = this.state.display;\n    if(this.state.selection) {\n      selection = this.state.blogs.filter(blog => blog.category === this.state.selection);\n    }\n\n    const blogs = selection\n      .filter(blog => !blog.isTopStory && blog.status === 'PBSHD')\n      .map(blog =>(\n          <div onClick={() => this.pickBlog(blog.id)} key={blog.id}>\n            <ul className=\"list-group mb-1\">\n              <div className=\"list-group-item list-group-item-action\">\n                  <h5 className=\"mb-3 right-side-blogtitle\">{blog.title}</h5>\n                  <p className='author'>{blog.author}</p>\n              </div>\n            </ul>\n          </div>\n        )\n      );\n      let html;\n      if(display === 'home'){\n        html = <div className=\"row\"> <div className=\"col-8\"><h5 className='top-stories-heading'>Top Stories</h5><BlogList blogs={selection} truncate={this.truncate} pickBlog={this.pickBlog}/></div>\n                    <div className=\"col-4\"><h5 className=\"last-week-stories\">Last Week</h5>\n                    {blogs}\n                </div></div>\n      } else if (display === 'register') {\n        html =  <RegisterForm registerUser={this.registerUser}/> //blogform used to be here\n\n      } else if (display === 'login') {\n        html = <LoginForm logIn={this.logIn}/> //status list used to be here\n      } else if (display === 'pickedBlog') {\n        html = <FullBlog pickedBlog={this.state.pickedBlog}/>\n      }\n      let loggedInHtml;\n      if(display === 'form'){\n        loggedInHtml = <BlogForm addBlog={this.addBlog}/>\n      } else if (display === 'StatusList') {\n        loggedInHtml = <StatusList blogs={this.state.blogs} deleteBlog={this.deleteBlog} editBlog={this.editBlog}/>\n      } else if (display === 'home') {\n        loggedInHtml = <div className=\"row\"> <div className=\"col-8\"><h5 className='top-stories-heading'>Top Stories</h5><BlogList blogs={selection} truncate={this.truncate} pickBlog={this.pickBlog}/></div>\n                    <div className=\"col-4\"><h5 className=\"last-week-stories\">Last Week</h5>\n                    {blogs}\n                </div></div>\n      } else if (display === 'pickedBlog') {\n        loggedInHtml = <FullBlog pickedBlog={this.state.pickedBlog}/>\n      }\n      const isLoggedIn = this.state.isLoggedIn;\n    return(\n      <React.Fragment>\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          {isLoggedIn === false?<button className=\"btn btn-dark\" type='button' onClick={() => {this.setState({display:'home'}); this.setState({selection: null});}} data-filter=\"all\">HomePage</button>\n          : <button className=\"btn btn-dark\" type='button' onClick={() => {this.setState({display:'home'}); this.setState({selection: null});}} data-filter=\"all\">HomePage</button>}\n          <button className=\"btn btn-dark\"type='button' onClick={this.handleClick} data-filter=\"ENT\">Entertainment</button>\n          <button className=\"btn btn-dark\" type='button' onClick={this.handleClick} data-filter=\"SPRT\">Sports</button>\n          <button className=\"btn btn-dark\" type='button' onClick={this.handleClick} data-filter=\"TVL\">Travel</button>\n          <button className=\"btn btn-dark\" type='button' onClick={this.handleClick} data-filter=\"FD\">Food</button>\n          {isLoggedIn === false?<button className=\"btn btn-dark\" onClick={() => this.setState({display: 'register'})}>Register</button>\n          : <button className=\"btn btn-dark\" onClick={() => this.setState({display: 'form'})}>Form</button>}\n          {isLoggedIn === false?''\n          : <button className=\"btn btn-dark\" onClick={() => this.setState({display: 'StatusList'})}>Status List</button> }\n          {isLoggedIn === false?<button className=\"btn btn-dark\" onClick={() => this.setState({display: 'login'})} type='button'>Log in</button>\n          : <button className=\"btn btn-dark\" onClick={this.logOut}>Logout</button> }\n        </nav>\n        <div className=\"row no-gutters mt-4 form\">\n        {isLoggedIn === true? loggedInHtml\n          : html\n        }\n        </div>\n      </div>\n      </React.Fragment>\n    )\n  }\n}\n\nclass FullBlog extends Component{\n  render(props){\n    return(\n      <div className=\"col list-group mb-1\">\n        <div className=\"list-group-item\">\n          <h5>{this.props.pickedBlog.title}</h5>\n          <p>{this.props.pickedBlog.author}</p>\n          <p>{this.props.pickedBlog.body}</p>\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}